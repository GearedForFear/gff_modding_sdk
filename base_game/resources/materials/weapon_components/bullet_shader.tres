[gd_resource type="VisualShader" load_steps=6 format=2]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "alpha"

[sub_resource type="VisualShaderNodeScalarOp" id=2]
default_input_values = [ 0, 0.0, 1, 0.5 ]

[sub_resource type="VisualShaderNodeColorUniform" id=3]
uniform_name = "ColorUniform"

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorDecompose" id=5]

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible, unshaded;

uniform vec4 ColorUniform : hint_color;



void vertex() {
// Input:2
	vec3 n_out2p0 = VERTEX;

// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;

// Output:0
	COLOR.a = n_out3p1;

}

void fragment() {
// ColorUniform:4
	vec3 n_out4p0 = ColorUniform.rgb;
	float n_out4p1 = ColorUniform.a;

// Input:2
	float n_out2p0 = COLOR.a;

// ScalarOp:3
	float n_in3p1 = 0.50000;
	float n_out3p0 = n_out2p0 + n_in3p1;

// Output:0
	ALBEDO = n_out4p0;
	ALPHA = n_out3p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -449.849, 75.1287 )
flags/unshaded = true
nodes/vertex/2/node = SubResource( 4 )
nodes/vertex/2/position = Vector2( 0, 260 )
nodes/vertex/3/node = SubResource( 5 )
nodes/vertex/3/position = Vector2( 180, 260 )
nodes/vertex/connections = PoolIntArray( 2, 0, 3, 0, 3, 1, 0, 7 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 20, 220 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 200, 200 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 80, 60 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 3, 0, 0, 1, 4, 0, 0, 0 )
